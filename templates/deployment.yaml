apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ghost.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "ghost.name" . }}
    helm.sh/chart: {{ include "ghost.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.deployment.replicaCount }}
  strategy:
    {{- toYaml .Values.deployment.strategy | nindent 4 }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "ghost.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "ghost.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      volumes:
        - name: content-folder
          {{ if .Values.contentVolume.usePvc -}}
          persistentVolumeClaim:
            claimName: {{ include "ghost.fullname" . }}
          {{- else -}}
          emptyDir: {}
          {{ end }}
        - name: config-folder
          configMap:
            name: {{ include "ghost.fullname" . }}
      initContainers:
        - name: init-filesystem
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - "bash"
            - "-c"
            - "chown ghost /data"
          volumeMounts:
            - name: content-folder
              mountPath: /data
          securityContext:
            runAsUser: 0
        - name: init-content
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - "bash"
            - "-c"
            - "cp -R /opt/ghost/content/* /data"
          volumeMounts:
            - name: content-folder
              mountPath: /data
        - name: migrate-database
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            # Database
            - name: NODE_ENV
              value: production
            {{ if .Values.mysqlca }}
            - name: NODE_EXTRA_CA_CERTS
              value: /opt/ghost/mysqlca.crt
            {{ end }}
            {{- if .Values.deployment.secrets.databasePasswordSecret }}
            - name: database__connection__password
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.deployment.secrets.databasePasswordSecret }}
                  key: DATABASE_PASSWORD
            {{- end }}
          args:
            - "node_modules/.bin/knex-migrator"
            - "migrate"
          volumeMounts:
            - name: content-folder
              mountPath: /opt/ghost/content
            - name: config-folder
              mountPath: /opt/ghost/config.production.json
              subPath: config.production.json
            {{ if .Values.mysqlca }}
            - name: config-folder
              mountPath: /opt/ghost/mysqlca.crt
              subPath: mysqlca.crt
            {{ end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: NODE_ENV
              value: production
            {{ if .Values.mysqlca }}
            - name: NODE_EXTRA_CA_CERTS
              value: /opt/ghost/mysqlca.crt
            {{ end }}
            {{- if .Values.deployment.secrets.databasePasswordSecret }}
            - name: database__connection__password
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.deployment.secrets.databasePasswordSecret }}
                  key: DATABASE_PASSWORD
            {{- end }}
            {{- if .Values.deployment.secrets.mailPasswordSecret }}
            - name: mail__options__password
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.deployment.secrets.databasePasswordSecret }}
                  key: DATABASE_PASSWORD
            {{- end }}
          args:
            - "npm"
            - "start"
          volumeMounts:
            - name: content-folder
              mountPath: /opt/ghost/content
            - name: config-folder
              mountPath: /opt/ghost/config.production.json
              subPath: config.production.json
            {{ if .Values.mysqlca }}
            - name: config-folder
              mountPath: /opt/ghost/mysqlca.crt
              subPath: mysqlca.crt
            {{ end }}
          ports:
            - name: http
              containerPort: 2368
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: 2368
            initialDelaySeconds: 30
          readinessProbe:
            tcpSocket:
              port: 2368
            initialDelaySeconds: 30
          resources:
            {{- toYaml .Values.deployment.resources | nindent 12 }}
